# -*- mode: ruby -*-

vault_config_file = 'vault_config'
vault_config = Hash[File.read(vault_config_file).split("\n").
                      map{|s| s.split('=')}]

Vagrant.require_version ">= 2.2.10"

domain = 'localdomain'
box = "generic/ubuntu1804"
gateway = "14.0.0.1"
ram = "16384"
agents = [
  { :hostname => 'reside-bk1', :ip => '14.0.0.2', :mac => "00:15:5d:1a:84:20", :queue => "default"},
  { :hostname => 'reside-bk2', :ip => '14.0.0.3', :mac => "00:15:5d:1a:84:21", :queue => "default"},
  { :hostname => 'reside-bk3', :ip => '14.0.0.4', :mac => "00:15:5d:1a:84:22", :queue => "default"},
  { :hostname => 'reside-bk4', :ip => '14.0.0.5', :mac => "00:15:5d:1a:84:23", :queue => "default"},
  { :hostname => 'reside-bk5', :ip => '14.0.0.6', :mac => "00:15:5d:1a:84:24", :queue => "default"},
  { :hostname => 'reside-bk6', :ip => '14.0.0.7', :mac => "00:15:5d:1a:84:25", :queue => "default"},
  { :hostname => 'reside-bk7', :ip => '14.0.0.8', :mac => "00:15:5d:1a:84:26", :queue => "default"},
  { :hostname => 'reside-bk8', :ip => '14.0.0.9', :mac => "00:15:5d:1a:84:27", :queue => "default"},
  { :hostname => 'reside-deploy1', :ip => '14.0.0.10', :mac => "00:15:5d:1a:84:28", :queue => "deploy"}
]

Vagrant.configure(2) do |config|
  config.vm.box = box
  config.vm.network "public_network", bridge: "NATSwitch", auto_config: false

  agents.each do |agent|
    config.vm.define agent[:hostname] do |agent_config|
      agent_config.vm.provider :hyperv do |hyperv|
        hyperv.mac = agent[:mac]
        hyperv.vmname = agent[:hostname]
        hyperv.cpus = 1
        hyperv.maxmemory = ram
        hyperv.memory = "1024"
        hyperv.auto_start_action = "StartIfRunning"
        hyperv.auto_stop_action = "Save"
      end
      agent_config.vm.hostname = agent[:hostname]
      agent_config.vm.provision :shell, path: "./vm_scripts/setup-network.sh",
		                                  env: {"IP" => agent[:ip], "GW" => gateway}

      agent_config.vm.provision :shell, path: "./vm_scripts/setup.sh"
      agent_config.vm.provision :shell, path: "./vm_scripts/setup-agent.sh"
      agent_config.vm.provision :shell, path: "./vm_scripts/setup-docker.sh"
      agent_config.vm.provision :shell, path: "./vm_scripts/setup-vault.sh"
      agent_config.vm.provision :shell, path: "./vm_scripts/setup-pip.sh"
      agent_config.vm.provision :shell, path: "./vm_scripts/start-agent.sh", env: vault_config,
                                        args: agent[:queue]
	end
  end
end
